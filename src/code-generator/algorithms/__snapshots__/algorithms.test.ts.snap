// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Algorithm code generator matches snapshots should match graph-depth-first-search snapshot 1`] = `"{\\"functions\\":[\\"function graphDepthFirstSearchRecursive(\\\\n    graph: DFSGraph,\\\\n    start: DFSGraphNode\\\\n): DFSGraph {\\\\n    start.value.visited = true;\\\\n\\\\n    for (let node of start.neighbours()) {\\\\n        if (!node.value.visited) {\\\\n            graphDepthFirstSearchRecursive(graph, node);\\\\n        }\\\\n    }\\\\n\\\\n    return graph;\\\\n}\\"]}"`;

exports[`Algorithm code generator matches snapshots should match insertion-sort snapshot 1`] = `"{\\"functions\\":[\\"function insertionSort(list: number[]) {\\\\n    let position = null;\\\\n    let pointer = null;\\\\n\\\\n    position = 1;\\\\n\\\\n    while (position < list.length) {\\\\n        let x = list[position];\\\\n\\\\n        pointer = position - 1;\\\\n\\\\n        while (pointer >= 0 && list[pointer] > x) {\\\\n            list[pointer + 1] = list[pointer];\\\\n            pointer--;\\\\n        }\\\\n\\\\n        list[pointer + 1] = x;\\\\n\\\\n        position++;\\\\n    }\\\\n\\\\n    return list;\\\\n}\\"]}"`;

exports[`Algorithm code generator matches snapshots should match selection-sort snapshot 1`] = `"{\\"functions\\":[\\"function selectionSort(list: number[]) {\\\\n    for (let position = 0; position < list.length - 1; position++) {\\\\n        let smallest = position;\\\\n\\\\n        for (let pointer = position + 1; pointer < list.length; pointer++) {\\\\n            if (list[smallest] > list[pointer]) {\\\\n                smallest = pointer;\\\\n            }\\\\n        }\\\\n\\\\n        let x = list[position];\\\\n        list[position] = list[smallest];\\\\n        list[smallest] = x;\\\\n    }\\\\n\\\\n    return list;\\\\n}\\"]}"`;
